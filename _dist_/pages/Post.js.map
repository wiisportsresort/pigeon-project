{"version":3,"names":[],"sources":["Post.svelte"],"sourcesContent":["<script lang=\"ts\">;\nimport { pop } from 'svelte-spa-router';\nimport { fade } from 'svelte/transition';\nimport IconButton from '../components/IconButton.svelte';\n;\nimport PostCard from '../components/PostCard.svelte';\nimport { assert } from '../util';\nexport let hydrator;\nexport let params = { id: undefined };\nlet currentPost = hydrator.getPost(params.id);\n$: currentPost = hydrator.getPost(params.id);\nconst getParents = (...chain) => {\n    return chain[0].parent ? getParents(chain[0].parent, ...chain) : chain;\n};\n$: postChain = currentPost ? getParents(currentPost) : undefined;\nconst getPostCardType = (post) => {\n    if ((postChain === null || postChain === void 0 ? void 0 : postChain.length) === 1)\n        return undefined;\n    return (postChain === null || postChain === void 0 ? void 0 : postChain.indexOf(post)) === 0\n        ? 'linked-bottom'\n        : (postChain === null || postChain === void 0 ? void 0 : postChain.indexOf(post)) !== assert(postChain === null || postChain === void 0 ? void 0 : postChain.length) - 1\n            ? 'linked-full'\n            : 'linked-top';\n};\nconst getInteractive = (post) => {\n    return post.id === assert(currentPost).id ? undefined : 'full';\n};\n//# sourceMappingURL=Post.svelte.js.map</script>\n\n<style lang=\"scss\">#post {\n  max-width: 892px;\n  margin: 0 auto;\n}\n\nheader {\n  display: flex;\n  align-items: center;\n  margin-bottom: 4px;\n}\nheader #back-button-wrapper {\n  margin-right: 4px;\n}</style>\n\n<div in:fade={{ duration: 100 }}>\n  <div id=\"post\">\n    {#if currentPost}\n      <header>\n        <div id=\"back-button-wrapper\">\n          <div on:click={pop}>\n            <IconButton icon=\"arrow-left\" size={32} iconSize={20} />\n          </div>\n        </div>\n        <span>Post by <b>@{currentPost.author?.username}</b> ({params.id})</span>\n      </header>\n      {#each assert(postChain) as post}\n        <PostCard {post} interactive={getInteractive(post)} type={getPostCardType(post)} />\n      {/each}\n    {:else}\n      <h3>Post not found: <code>{params.id}</code></h3>\n    {/if}\n  </div>\n</div>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;SACS,GAAG,QAAQ,mBAAmB;SAC9B,IAAI,QAAQ,mBAAmB;OACjC,UAAU,MAAM,iCAAiC;OAEjD,QAAQ,MAAM,+BAA+B;SAC3C,MAAM,QAAQ,SAAS;;;;;;;;;;;;;2BAoDC,GAAM,IAAC,EAAE;;;;;;;;;;;;;;;;;mEAAT,GAAM,IAAC,EAAE;;;;;;;;;;;;;;;;;;;;;gCANf,GAAW,IAAC,MAAM,EAAE,QAAQ;;;2BAAQ,GAAM,IAAC,EAAE;;;;;;;;;;;;UAHxB,EAAE;cAAY,EAAE;;;;kBAKnD,MAAM,eAAC,GAAS;;;gCAArB,MAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oCANa,GAAG;;;;;2FAID,GAAW,IAAC,MAAM,EAAE,QAAQ;iFAAQ,GAAM,IAAC,EAAE;;;iBAE3D,MAAM,eAAC,GAAS;;;+BAArB,MAAI;;;;;;;;;;;;;;;;wBAAJ,MAAI;;;;;;;;;;;kCAAJ,MAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oCAC0B,GAAc,aAAC,GAAI;8BAAS,GAAe,aAAC,GAAI;;;;;;;;;;;;;;;kFAAhD,GAAc,aAAC,GAAI;4EAAS,GAAe,aAAC,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sBAV7E,GAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qDAFJ,QAAQ,EAAE,GAAG;;;;;;;;;;;;;;;;;;;;;;OApClB,QAAQ;OACR,MAAM,KAAK,EAAE,EAAE,SAAS;KAC/B,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;;OAEtC,UAAU,OAAO,KAAK;SACjB,KAAK,CAAC,CAAC,EAAE,MAAM;IAAG,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,KAAK,KAAK;IAAI,KAAK;;;OAGpE,eAAe,GAAI,IAAI;OACpB,SAAS,KAAK,IAAI,IAAI,SAAS,UAAU,CAAC;SAAQ,CAAC;IAAG,SAAS,CAAC,MAAM,MAAM,CAAC,SACvE,SAAS;;UACZ,SAAS,KAAK,IAAI,IAAI,SAAS,UAAU,CAAC;SAAQ,CAAC;IAAG,SAAS,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC;IACtF,eAAe;KACd,SAAS,KAAK,IAAI,IAAI,SAAS,UAAU,CAAC;UAAQ,CAAC;KAAG,SAAS,CAAC,OAAO,CAAC,IAAI,OAAO,MAAM,CAAC,SAAS,KAAK,IAAI,IAAI,SAAS,UAAU,CAAC;UAAQ,CAAC;KAAG,SAAS,CAAC,MAAM,IAAI,CAAC;KAClK,aAAa;KACb,YAAY;;;OAEpB,cAAc,GAAI,IAAI;SACjB,IAAI,CAAC,EAAE,KAAK,MAAM,CAAC,WAAW,EAAE,EAAE,GAAG,SAAS,GAAG,MAAM;;;;;;;;;;GAflE,CAAC,kBAAE,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;;;;GAI3C,CAAC,kBAAE,SAAS,GAAG,WAAW,GAAG,UAAU,CAAC,WAAW,IAAI,SAAS;;;;;;;;;;;;;;"}