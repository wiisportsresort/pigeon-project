{"version":3,"file":"Post.svelte","sources":["Post.svelte"],"sourcesContent":["<script lang=\"ts\">;\nimport { pop } from 'svelte-spa-router';\nimport { fade } from 'svelte/transition';\nimport IconButton from '../components/IconButton.svelte';\nimport LargePostCard from '../components/LargePostCard.svelte';\n;\nimport PostCard from '../components/PostCard.svelte';\nimport { assert } from '../util';\nexport let hydrator;\nexport let params = { id: undefined };\nlet currentPost = hydrator.getPost(params.id);\n$: currentPost = hydrator.getPost(params.id);\nconst getParents = (...chain) => {\n    return chain[0].parent ? getParents(chain[0].parent, ...chain) : chain;\n};\n$: postChain = currentPost ? getParents(currentPost) : undefined;\nconst getPostCardType = (post) => {\n    if ((postChain === null || postChain === void 0 ? void 0 : postChain.length) === 1)\n        return undefined;\n    return (postChain === null || postChain === void 0 ? void 0 : postChain.indexOf(post)) === 0\n        ? 'linked-bottom'\n        : (postChain === null || postChain === void 0 ? void 0 : postChain.indexOf(post)) !== assert(postChain === null || postChain === void 0 ? void 0 : postChain.length) - 1\n            ? 'linked-full'\n            : 'linked-top';\n};\nconst isCurrent = (post) => post.id === assert(currentPost).id;\n//# sourceMappingURL=Post.svelte.js.map</script>\n\n<style lang=\"scss\">#post {\n  max-width: 700px;\n  margin: 0 auto;\n}\n\nheader {\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.25rem;\n}\nheader .heading {\n  margin: 0;\n}\nheader #back-button-wrapper {\n  margin-right: 0.25rem;\n}</style>\n\n{#key currentPost}\n  <div in:fade={{ duration: 100 }}>\n    <div id=\"post\">\n      {#if currentPost}\n        <header>\n          <div id=\"back-button-wrapper\">\n            <div on:click={pop}>\n              <IconButton icon=\"arrow-left\" size={32} iconSize={20} />\n            </div>\n          </div>\n          <span>Post by <b>@{currentPost.author?.username}</b></span>\n        </header>\n        <section id=\"posts\">\n          {#each assert(postChain) as post}\n            <svelte:component\n              this={isCurrent(post) ? LargePostCard : PostCard}\n              {post}\n              showParent={isCurrent(post)}\n              interactive={isCurrent(post) ? 'header' : 'full'}\n              type={getPostCardType(post)}\n            />\n          {/each}\n        </section>\n        {#if currentPost.comments?.length}\n          <h3>Comments</h3>\n          <section id=\"comments\">\n            {#each [...currentPost.comments].sort(({ timestamp: a }, { timestamp: b }) => b.getTime() - a.getTime()) as comment}\n              <PostCard\n                post={comment}\n                showParent\n                interactive=\"full\"\n                type={comment.comments?.length ? 'linked-bottom' : undefined}\n              />\n              {#if comment.comments?.length}\n                <PostCard\n                  post={comment.comments[0]}\n                  showParent={false}\n                  interactive=\"full\"\n                  type={comment.comments[0]?.comments?.length ? 'linked-full' : 'linked-top'}\n                />\n                {#if comment.comments[0].comments?.length}\n                  <PostCard\n                    post={comment.comments[0].comments[0]}\n                    showParent={false}\n                    interactive=\"full\"\n                    type=\"linked-top\"\n                  />\n                {/if}\n              {/if}\n            {/each}\n          </section>\n        {/if}\n      {:else}\n        <header>\n          <div id=\"back-button-wrapper\">\n            <div on:click={pop}>\n              <IconButton icon=\"arrow-left\" size={32} iconSize={20} />\n            </div>\n          </div>\n          <span class=\"heading\">Post not found: <code>{params.id}</code></span>\n        </header>\n      {/if}\n    </div>\n  </div>\n{/key}\n"],"names":[],"mappings":"AA4BmB,KAAK,4BAAC,CAAC,AACxB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC,AAED,MAAM,4BAAC,CAAC,AACN,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,aAAa,CAAE,OAAO,AACxB,CAAC,AACD,oBAAM,CAAC,QAAQ,cAAC,CAAC,AACf,MAAM,CAAE,CAAC,AACX,CAAC,AACD,oBAAM,CAAC,oBAAoB,cAAC,CAAC,AAC3B,YAAY,CAAE,OAAO,AACvB,CAAC"}